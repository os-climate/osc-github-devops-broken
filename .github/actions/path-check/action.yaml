---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2024 The Linux Foundation <https://linuxfoundation.org>

name: "✅ Check path exists in repository"

inputs:
  CHECK_PATH:
    description: "File system path to check"
    required: true

outputs:
  TYPE:
    description: "Returns either [file|directory|invalid]"
    value: ${{ steps.check-path.outputs.type }}
  SYMLINK:
    description: "Returns [true|false] if path is a symbolic link"
    value: ${{ steps.check-path.outputs.symlink }}

runs:
  using: "composite"
  steps:
    - name: "Check if a given path exists in the repository"
      id: check-path
      shell: bash
      run: |
        # Check if a given path exists in the repository

        #SHELLCODESTART

        # Allows for testing from a local shell
        if [ -z "$GITHUB_OUTPUT" ]; then
          echo "Running from a shell, NOT workflow"
          export GITHUB_OUTPUT="/dev/null"
          export GITHUB_ENV="/dev/null"
          if [ $# -ne 1 ]; then
            echo "Error: invalid arguments specified"
            echo "Usage:  $0 [path to validate]"; exit 1
          else
            CHECK_PATH="$1"
          fi
        else
          CHECK_PATH="${{ inputs.CHECK_PATH }}"
        fi

        # Check if path is a symbolic link
        if [ -L "$CHECK_PATH" ]; then
          SYMLINK="true"
        else
          SYMLINK="false"
        fi

        if [ -f "$CHECK_PATH" ]; then
          TYPE="file"
        elif [ -d "$CHECK_PATH" ]; then
          TYPE="directory"
        else
          TYPE="invalid"
        fi

        # Report results from action
        echo "Type: $TYPE"
        echo "Symlink: $SYMLINK"
        echo "type=$TYPE" >> "$GITHUB_ENV"
        echo "type=$TYPE" >> "$GITHUB_OUTPUT"
        echo "symlink=$SYMLINK" >> "$GITHUB_ENV"
        echo "symlink=$SYMLINK" >> "$GITHUB_OUTPUT"

        #SHELLCODEEND
