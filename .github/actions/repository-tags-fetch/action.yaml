---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2024 The Linux Foundation <https://linuxfoundation.org>

name: "🏷️ Retrieve/Validate Tags"

outputs:
  TAG:
    # A leading non-numeric "v" character will be stripped
    description: "Return the latest semantic tag from repository"
    value: ${{ steps.results.outputs.tag }}
  VTAG:
    description: "The tag [with v prefix] e.g. v1.2.3"
    value: ${{ steps.results.outputs.vtag }}
  INVALID:
    description: "Flag set true if no semantic tags found"
    value: ${{ steps.results.outputs.invalid }}

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4

    - name: "Fetch tags"
      shell: bash
      if: startsWith(github.ref, 'refs/tags/') != true
      # Don't fetch tags if a tag was pushed, it will result in an error, e.g.
      # Fetching tags...
      # From https://github.com/os-climate/osc-github-devops
      #  * [new branch]      main       -> origin/main
      #  * [new tag]         v0.0.0     -> v0.0.0
      #  ! [rejected]        v0.0.2     -> v0.0.2  (would clobber existing tag)
      run: |
        # Workaround for: https://github.com/actions/checkout/issues/1471
        echo "Fetching tags..."
        git fetch --tags

    - name: "Get latest tag"
      id: retrieve
      shell: bash
      run: |
        # Get latest tag
        TAG_INTERIM=$(git tag -l --sort=committerdate | grep -o '?*.*.*' | sort -r | head -1 || true)

        # If present, strip the leading "v" character
        if [[ "$TAG_INTERIM" == v* ]]; then
          TAG_INTERIM="${TAG_INTERIM:1}"
          echo "Numeric value: $TAG_INTERIM"
        fi

        # Report the result
        echo "tag_interim=${TAG_INTERIM}" >> $GITHUB_OUTPUT

    - name: "Check semantic/validity"
      id: validate
      uses: os-climate/osc-github-devops/.github/actions/semantic-tag-validate@main
      with:
        tag: ${{ steps.retrieve.outputs.tag_interim }}

    - name: "Check semantic/validity"
      id: results
      shell: bash
      run: |
        # Validate supplied (and parsed) tag
        if [ ${{ steps.validate.outputs.valid }} = "true" ]; then
          echo "Tag retrieved and is semantic/valid"
          TAG="${{ steps.retrieve.outputs.tag_interim }}"
          echo "invalid=false" >> $GITHUB_OUTPUT
        else
          echo "No valid semantic tags were found"
          echo "invalid=true" >> $GITHUB_OUTPUT
          # Set a placeholder value for the tag
          TAG="0.0.0"
        fi

        echo "Tag: $TAG [v$TAG]"
        echo "tag=${TAG}" >> $GITHUB_OUTPUT
        echo "vtag=v${TAG}" >> $GITHUB_OUTPUT
