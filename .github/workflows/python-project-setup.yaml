---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2024 The Linux Foundation <https://linuxfoundation.org>

name: "üõ†Ô∏è Python Project Setup"
# Extracts Python project metadata"

on:
  workflow_call:
    inputs:
      DEFAULT_PYTHON:
        description: "Version used to upload/store artefacts for publishing"
        required: false
        type: string
        default: "3.11"
      ARTEFACT_LOCATION:
        description: "Build artefacts will be output to this folder/directory"
        required: false
        type: string
        default: "dist"
      PYPI_PUBLISHING:
        description: "Publish artefacts to the Python Package Index (PyPI)"
        required: false
        type: string
        default: "false"

    outputs:
      # Enumerated values
      PYTHON_PROJECT_NAME:
        description: "The name of the Python project from pyproject.toml or setup.py"
        value: ${{ jobs.python-project.outputs.python_project_name }}
      PYTHON_BUILD_NAME:
        # Any dashes in the name will be replaced with underscores
        description: "The name of the Python project when built"
        value: ${{ jobs.python-project.outputs.python_build_name }}
      VERSIONING_TYPE:
        description: "Project supported Python versions as JSON"
        value: ${{ jobs.python-project.outputs.versioning_type }}
      MATRIXJSON:
        description: "Project supported Python versions as JSON"
        value: ${{ jobs.python-project.outputs.matrixjson }}

      # Passthrough values
      DEFAULT_PYTHON:
        description: "Version used to upload/store artefacts for publishing"
        value: ${{ inputs.default_python }}
      ARTEFACT_LOCATION:
        description: "Build artefacts will be output to this folder/directory"
        value: ${{ inputs.artefact_location }}
      PYPI_PUBLISHING:
        description: "Publish artefacts to the Python Package Index (PyPI)"
        value: ${{ inputs.pypi_publishing }}

jobs:
  python-project:
    name: Python Project
    runs-on: "ubuntu-latest"
    permissions:
      contents: write
      # Required by SigStore signing action
      id-token: write
      # Required for attestations
      attestations: write
    outputs:
      python_project_name: ${{ steps.project-naming.outputs.python_project_name }}
      python_build_name: ${{ steps.project-naming.outputs.python_build_name }}
      versioning_type: ${{ steps.versioning-type.outputs.versioning_type }}
      matrixjson: ${{ steps.versions-matrix.outputs.matrixjson }}

    steps:
      - uses: actions/checkout@v4

      - name: "Setup Python ${{ inputs.default_python }}"
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.default_python }}

      - name: "Install PDM tooling"
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: ${{ inputs.default_python }}

      - name: "Extract Python project naming"
        id: project-naming
        # yamllint disable-line rule:line-length
        uses: os-climate/osc-github-devops/.github/actions/python-project-naming@main
        with:
          python-version: ${{ inputs.default_python }}

      - name: "Determine versioning type [static|dynamic]"
        id: versioning-type
        # yamllint disable-line rule:line-length
        uses: os-climate/osc-github-devops/.github/actions/python-versioning-type@main

      - name: "Extract Python supported versions (JSON)"
        id: versions-matrix
        # yamllint disable-line rule:line-length
        uses: os-climate/osc-github-devops/.github/actions/python-versions-matrix@main
