---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2024 The Linux Foundation <https://linuxfoundation.org>

name: "ðŸ§± Python Build (Matrix)"
# Builds a project for any number of specified Python versions"

on:
  workflow_call:
    inputs:
      PYTHON_VERSION:
        # Usually specified/extracted from the file: pyproject.toml
        description: "Python matrix versions to use for test builds (in JSON)"
        required: true
        type: string
      ARTEFACT_PYTHON:
        description: "Version used to upload/store artefacts for publishing"
        required: false
        type: string
        default: "3.11"
      ARTEFACT_LOCATION:
        description: "Build artefacts will be output to this folder/directory"
        required: false
        type: string
        default: "dist"
      BUILD_TAG:
        description: "Build tag/name"
        required: true
        type: string
      SIGSTORE_SIGN:
        description: "Sign build artefacts with Sigstore"
        required: false
        type: string
        default: "false"

jobs:
  python-build-matrix:
    name: Python Project
    runs-on: "ubuntu-latest"
    permissions:
      contents: write
      # Required by SigStore signing action
      id-token: write
      # Required for attestations
      attestations: write

    steps:
      - uses: actions/checkout@v4

      - name: "Set up Python ${{ inputs.python_version }}"
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python_version }}

      - name: "Install PDM tooling"
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: ${{ inputs.python_version }}

      - name: "Build Python project"
        id: python-matrix-builds
        uses: os-climate/osc-github-devops/.github/actions/python-build-project@main
        with:
          build_tag: ${{ inputs.build_tag }}

      - name: "Validate artefacts with Twine"
        id: python-twine-check
        # yamllint disable-line rule:line-length
        uses: os-climate/osc-github-devops/.github/actions/python-twine-check@main

      - name: "Capture repository/project name"
        shell: bash
        run: |
          # Capture repository/project name
          REPOSITORY_NAME=$(basename ${{ github.repository }})
          echo "repository=$REPOSITORY_NAME" >> "$GITHUB_ENV"

      - name: "Upload build artefacts"
        uses: actions/upload-artifact@v4
        if: inputs.python_version == inputs.ARTEFACT_PYTHON
        with:
          name: ${{ env.repository }}-${{ inputs.build_tag }}
          path: ${{ inputs.ARTEFACT_LOCATION }}

      # This step optional and must be explicitly requested (pass the relevant input)
      #  The reason is that the build action now leverages GitHub attestations
      - name: "Sign packages with SigStore"
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        if: inputs.python_version == inputs.ARTEFACT_PYTHON &&
          inputs.SIGSTORE_SIGN == 'true'
        env:
          package-path: ${{ inputs.ARTEFACT_LOCATION }}
        with:
          inputs: >-
            ./${{ inputs.ARTEFACT_LOCATION }}/*.tar.gz
            ./${{ inputs.ARTEFACT_LOCATION }}/*.whl
