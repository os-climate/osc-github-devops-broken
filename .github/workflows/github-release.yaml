---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2024 The Linux Foundation <https://linuxfoundation.org>

name: "ðŸ“¦ Release to GitHub"
# Packages a development/production release on GitHub"

on:
  workflow_call:
    inputs:
      PRE_RELEASE:
        description: "Mark release as pre-release/development version"
        type: string
        required: false
        default: false
      BUILD_TAG:
        description: "Semantic tag for this release/build"
        type: string
        required: true

jobs:
  github-release:
    name: "GitHub Release"
    runs-on: "ubuntu-latest"
    permissions:
      contents: write

    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4

      - name: "Extract project/repository naming"
        id: naming
        # yamllint disable-line rule:line-length
        uses: os-climate/osc-github-devops/.github/actions/python-project-naming@main

      - name: "â¬‡ Download build artefacts"
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.python_project_name }}-${{ inputs.build_tag }}
          path: ${{ env.BUILD_ARTEFACTS }}

      - name: "Check tag matches pyproject.toml"
        if: inputs.PRE_RELEASE == 'false'
        shell: bash
        run: |
          # Check tag push matches pyproject.toml metadata
          echo "ToDo: NOT IMPLEMENTED YET"

      - name: "Create GitHub release"
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: ${{ inputs.PRE_RELEASE }}
          tag_name: ${{ inputs.build_tag }}
          name: "${{ env.python_project_name }} ${{ inputs.build_tag }}"

          #Â ToDo: Incorporate release notes, etc.
          # body_path: ${{ github.workspace }}/CHANGELOG.rst
          files: |
            ${{ env.BUILD_ARTEFACTS }}/*.tar.gz
            ${{ env.BUILD_ARTEFACTS }}/*.whl
            ${{ env.BUILD_ARTEFACTS }}/*.sigstore*
